{
  "name": "Emojiairaphael2",
  "tagline": "Functions and Interaction with JavaScript & Raphael",
  "body": "#1. Last Worksheet\r\n\r\n![Imgur](http://i.imgur.com/zK4xZhV.png)\r\n\r\nFind and open your JSFiddle link from last week - as we're going to be working on adding things to it today.\r\n\r\n#2. Functions\r\n\r\nFirst off, we're going to make our code a little tidier by creating ourselves two functions `setUp` (which will set up our object) and `drawShapes` (which will do all our drawing).\r\n\r\nWe need to create a function like:\r\n\r\n```js\r\nfunction setUp(){\r\n\r\n}\r\n```\r\n\r\nWe will then need to put all our setup code inside the two squiggly brackets `{ }`. Variables that are created within a function aren't accessible to things outside however we can update it! So if we move our `emojiObject` before our function - we can update it inside our setup function - and use it in our drawing function.\r\n\r\nCreating a function does **not** mean that code will run automatically - we have to `call` the function like this:\r\n\r\n```js\r\nsetUp();\r\n```\r\n\r\nMy code looks like this:\r\n\r\n![Imgur](http://i.imgur.com/ohLADF4.png)\r\n\r\nAll that remains is to tidy up all of our drawing code into another function. My code looks like this:\r\n\r\n![Imgur](http://i.imgur.com/lcWkbQT.png)\r\n\r\n#3. Arrays\r\n\r\nNext - we can create things called arrays - which can hold several things inside. I'm going to create an array to hold all the colours my emoji's face can be filled with like this:\r\n\r\n```js\r\nvar fillColours = [\"#ffcc00\", \"#cc0000\", \"#1E88E5\"];\r\n```\r\n\r\nI can then use this array inside my setUp like:\r\n```js\r\nemojiObject = {\r\n        'fill': fillColours[2],\r\n```\r\n\r\nNote - the first thing inside an array always starts at 0 - this means because i have 3 things inside my `fillColours` I can have either 0, 1, or 2. \r\n\r\nMy code now looks like this:\r\n\r\n![Imgur](http://i.imgur.com/uZcUPMb.png)\r\n\r\n#4. Random\r\n\r\nNow that we have an array we can get the computer to generate a random colour for us. \r\n\r\nFirstly, we need to create a function to calculate a random number between two numbers for us:\r\n\r\n```js\r\nfunction randomNumber(min,max)\r\n{\r\n  return Math.floor(Math.random()*(max-min)+min);\r\n}\r\n```\r\n\r\nWe can then use this in our setUp like:\r\n\r\n```js\r\nemojiObject = {\r\n        'fill': fillColours[ randomNumber(0, 3) ],\r\n```\r\n\r\nWe can improve upon our code - so that if we added more colours we wouldn't have to update the `max` number of colours for the random function. To do this we can ask the computer for the `length` of our array, like this:\r\n\r\n```js\r\nemojiObject = {\r\n        'fill': fillColours[ randomNumber(0, fillColours.length) ],\r\n```\r\n\r\nMy code looks like this:\r\n![Imgur](http://i.imgur.com/d7MO6tv.png)\r\n\r\n#5. Buttons\r\n\r\nWe're now going to create ourselves our very own \"reset\" button - so we can generate our own random emojis without having to press the run button loads.\r\n\r\nFirstly, we need to create a button - I've done this by creating a rectangle and placing some text on top like this:\r\n\r\n```js\r\nvar resetButton = paper.rect(20, 20, 130, 40, 10);\r\nresetButton.attr(\"fill\", \"#bfbfbf\");\r\n    \r\nvar resetText = paper.text(80, 40, \"Reset\");\r\nresetText.attr(\"font-size\", \"24\");\r\n```\r\n\r\nNote - I've had to change my emoji's cy value down so that my button isn't drawn behind it.\r\n\r\nNext we can listen for when people click the `resetButton` like this:\r\n\r\n```js\r\nresetButton.click( function() {\r\n        \r\n});\r\n```\r\n\r\nFinally, because we created our two functions to `setUp()` and `drawShapes()` we can just call these to setup and draw all our shapes again. Before we do that, we ought to clear our piece of paper by deleting everything on it - we can do all of that like this inside our reset button :\r\n\r\n```js\r\npaper.clear();\r\n        \r\nsetUp();\r\ndrawShapes();\r\n```\r\n\r\nMy code looks like this:\r\n\r\n![Imgur](http://i.imgur.com/oA7Ul4Z.png)\r\n\r\n#6. Finishing\r\n\r\nBefore you move onto the next worksheet make sure all your emoji properties have arrays with at least **5 things** in them - this way your emoji should change a lot each time you reset!\r\n\r\n:star: When you've finished - don't forget to save your JSFiddle and send us your link above. :star2:\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}